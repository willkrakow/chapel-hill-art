/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Floyd Council GLTF.glb --transform --output floydcouncil.jsx
*/

import React, { useEffect, useRef } from 'react'
import { CameraControls, useGLTF } from '@react-three/drei'
import { useThree } from '@react-three/fiber'
import { OrthographicCamera, } from 'three';

export function FloydCouncilModel(props) {
  const { nodes, materials } = useGLTF('/Floyd Council GLTF-transformed.glb')
  const camera = useThree(state => state.camera);
  const meshRef = useRef();
  const cameraRef = useRef();

  useEffect(() => {
    console.log(meshRef.current)
    console.log(cameraRef.current.camera)
  }, [])

  return (
    <group {...props} dispose={null}>
      <CameraControls ref={cameraRef} />
      <ambientLight position={[10, 10, 5]} intensity={2} castShadow />
      <mesh ref={meshRef} geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} onClick={() => console.log(camera.position)}  />
    </group>
  )
}

useGLTF.preload('/Floyd Council GLTF-transformed.glb')
